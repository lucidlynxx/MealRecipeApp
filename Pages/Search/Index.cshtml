@page "/search/{name?}"
@model MealRecipeApp.Pages.Search.IndexModel
@{
    ViewData["Title"] = "Search Meal";
}


<h1 class="d-flex justify-content-center">Search Meal</h1>

<p class="mb-4 d-flex justify-content-center">Use this page to find your meal's recipe.</p>

<div class="mb-4 d-flex justify-content-center">
    <form class="row g-2 w-50">
        <div class="col-10">
            <label for="SearchInput" class="visually-hidden">Search Meal</label>
            <input type="text" asp-for="name" class="form-control" id="SearchInput" placeholder="Type here..">
        </div>
        <div class="col-2">
            <button type="submit" class="btn btn-dark">Search</button>
        </div>
    </form>
</div>

@if (Model.Recipes.Meals != null && Model.Recipes.Meals.Any())
{
    <div class="row">
    @foreach (var item in Model.Recipes.Meals)
    {
        <div class="col-sm-3 mb-4 mb-sm-0">
            <div class="card mb-4" style="width: 16rem;">
                <img src="@Html.DisplayFor(modelItem => item.Thumb)" class="card-img-top" alt="@item.Name">
                <div class="card-body bg-dark">
                    <h6 class="card-title text-light">
                        <a class="text-light text-decoration-none" target="_blank" asp-page="/Meal/Index" asp-route-id="@item.Id">
                            @Html.DisplayFor(modelItem => item.Name)
                        </a>
                    </h6>
                        @{
                            var instructions = item.Instructions ?? "";
                            var limitedInstructions = string.Join(" ", instructions.Split(' ').Take(10)) + (instructions.Split(' ').Length > 10 ? "..." : "");
                        }
                    <p class="card-text text-light">@Html.DisplayFor(modelItem => limitedInstructions)</p>
                </div>
            </div>
        </div>
    }
    </div>
}
else 
{
    <p class="text-center">No Data</p>
}